1) unsigned char q1 = 73; Convert to binary
2^6 is the largest 2^x that can fit in it.
73 - 2^6 = 64 
We have 9 left
there is a 1 in the sixth pos
Next in 2^3 that an fix
9 - 2^3 = 1
there  is a 1 in the third pos
1 - 2^0 = 0
we have a 1 in the 0 pos

result is
0100 1001

Convert 73 to hex
73 / 16 = 4 remainder 9
4 / 16 = 0 remainer 4

hex is 0x49


2) signed char q2 = -5;
   Convert q2 to a binary number (show all steps)
   Convert q2 to a hexidecimal nubmer (show all steps)





3)unsigned char q3 = 0b11010110

As A decimal
	Convert
		1*2^7 + 1*2^6 + 0*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 1*2^1 + 0*2^0
		128+64+0+16+0+4+2+0
		214
		
As a Hexadecimal
214 / 16 = 13 with remainder 6
6 / 16 = 0 with remainder 6

13 is 0xD
6 is 0x6
meaing inswer is D6

4) Given: unsinged char a = 26;
	  unsinged char b = 55;
	  char c = 0;
   What would the value of c be (in binary) after completeing each of the 
   following operations (show all steps in binary):
   a) c = a & b;
   b) c = a | b;
   c) c = a ^ b;
   d) c = ~a;
   e) c = a << 2;
   f) c = a >> 2;


5) Write a function that would return a 1 if the leftmost (MSB) bit of vlaue 
   is set and a 0 if it is not set. This should be only 2-3 lines of code.
   
   unint8_t msb_set (unint8_t value) {